       *Food Delivery App*

CREATE DATABASE-
  CREATE DATABASE db_fooddeliveryapp


CREATE TABLES-
  CREATE TABLE Restaurants (
    RestaurantID INT PRIMARY KEY,
    Name VARCHAR(100),
    City VARCHAR(50),
    CuisineType VARCHAR(50) CHECK (CuisineType IN ('Indian', 'Chinese', 'Italian')),
    Rating DECIMAL(2, 1),
    AverageCostForTwo DECIMAL(10, 2)
);

  CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Phone VARCHAR(15),
    City VARCHAR(50),
    JoinDate DATE
);

  CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    RestaurantID INT,
    OrderDate DATE,
    OrderAmount DECIMAL(10, 2),
    OrderStatus VARCHAR(20) CHECK (OrderStatus IN ('Pending', 'Delivered','Cancelled')),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurants(RestaurantID)
);

  CREATE TABLE Reviews (
    ReviewID INT PRIMARY KEY,
    CustomerID INT,
    RestaurantID INT,
    Rating DECIMAL(2, 1),
    Comment TEXT,
    ReviewDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurants(RestaurantID)
);

  CREATE TABLE Payments (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT,
    PaymentMethod VARCHAR(20) CHECK (PaymentMethod IN ('Card', 'Cash', 'Wallet')),
    Amount DECIMAL(10, 2),
    PaymentDate DATE,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);


INSERT VALUES INTO TABLES-
  INSERT INTO Restaurants (RestaurantID, Name, City, CuisineType, Rating, AverageCostForTwo) VALUES
  (101,'Spicy Treat', 'Mumbai', 'Indian', 4.7, 800),
  (102,'Pasta Paradise', 'Mumbai', 'Italian', 4.6, 1200),
  (103,'Noodle Nest', 'Delhi', 'Chinese', 4.2, 1000),
  (104,'Curry Delight', 'Mumbai', 'Indian', 4.5, 700),
  (105,'Pizza Planet', 'Delhi', 'Italian', 4.8, 1500);

  INSERT INTO Customers (CustomerID , FirstName, LastName, Phone, City, JoinDate) VALUES
  (201,'John', 'Doe', '1234567890', 'Mumbai', '2023-01-10'),
  (202,'Jane', 'Smith', '0987654321', 'Delhi', '2023-02-15'),
  (203,'Alice', 'Johnson', '1122334455', 'Mumbai', '2023-03-20'),
  (204,'Bob', 'Brown', '2233445566', 'Delhi', '2023-04-25'),
  (205,'Sam', 'Brown', '2233445554', 'Goa', '2023-03-15');

  INSERT INTO Orders (OrderID, CustomerID, RestaurantID, OrderDate, OrderAmount, OrderStatus) VALUES
  (1, 201, 101, '2023-06-01', 800, 'Delivered'),
  (2, 202, 102, '2023-06-02', 1200, 'Cancelled'),
  (3, 203, 103, '2023-06-03', 1000, 'Delivered'),
  (4, 204, 104, '2023-06-03', 2000, 'Pending'),
  (5, 205, 105, '2023-06-04', 700, 'Pending');

  INSERT INTO Reviews (ReviewID, CustomerID, RestaurantID, Rating, Comment, ReviewDate) VALUES 
  (1, 201, 101, 5.6, 'Excellent food and service!', '2025-05-01'),
  (2, 202, 102, 4.5, 'Great taste but service was a bit slow.', '2025-05-02'),
  (3, 203, 103, 3.3, 'Average experience, nothing special.', '2025-05-03'),
  (4, 204, 104, 2.0, 'Food was not fresh, disappointing.', '2025-05-04'),
  (5, 205, 105, 5.5, 'Loved the ambiance and food!', '2025-05-05');

  INSERT INTO Payments (PaymentID, OrderID, PaymentMethod, Amount, PaymentDate) VALUES 
  (1, 1, 'Card', 1500.00, '2025-05-01'),
  (2, 2, 'Cash', 700.50, '2025-05-02'),
  (3, 3, 'Wallet', 1250.75, '2025-05-03'),
  (4, 4, 'Card', 2000.00, '2025-05-04'),
  (5, 5, 'Cash', 950.25, '2025-05-05');


Qestions- 
1. Retrieve names and locations of restaurants with a rating of 4.5 or higher?
Ans. SELECT Name, City FROM Restaurants WHERE Rating >= 4.5;

2. Total number of orders placed by each customer?
Ans. SELECT Customers.FirstName, Customers.LastName, COUNT(Orders.OrderID) AS TotalOrders FROM Customers
     LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
     GROUP BY Customers.CustomerID;

3. List all restaurants offering "Italian" cuisine in "Mumbai"?
Ans. SELECT Name, City FROM Restaurants WHERE Cuisinetype = 'Italian' AND City = 'Mumbai';

4. Total revenue generated by each restaurant from completed orders?
Ans. SELECT Restaurants.Name, SUM(Orders.OrderAmount) AS TotalRevenue FROM Restaurants
     JOIN Orders ON Restaurants.RestaurantID = Orders.RestaurantID
     WHERE Orders.OrderStatus = 'Delivered'
     GROUP BY Restaurants.RestaurantID;

5. Most recent order placed by each customer?
Ans. SELECT Customers.FirstName, Customers.LastName, MAX(Orders.OrderDate) AS MostRecentOrder FROM Customers
     LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
     GROUP BY Customers.CustomerID;

6. Customers who have not placed any orders?
Ans. SELECT FirstName, LastName FROM Customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM Orders);

7. Identify the most reviewed restaurants?
Ans. SELECT Restaurants.Name, COUNT(Reviews.ReviewID) AS TotalReviews FROM Restaurants
     JOIN Reviews ON Restaurants.RestaurantID = Reviews.RestaurantID
     GROUP BY Restaurants.RestaurantID
     ORDER BY TotalReviews DESC;

8. Find the most preferred payment method?
Ans. SELECT PaymentMethod, COUNT(PaymentID) AS TotalPayments FROM Payments
     GROUP BY PaymentMethod
     ORDER BY TotalPayments DESC
     LIMIT 1;

9. Top 5 restaurants by total revenue?
Ans. SELECT Restaurants.Name, SUM(Orders.OrderAmount) AS TotalRevenue FROM Restaurants
     JOIN Orders ON Restaurants.RestaurantID = Orders.RestaurantID
     WHERE Orders.OrderStatus = 'Delivered'
     GROUP BY Restaurants.RestaurantID
     ORDER BY TotalRevenue DESC
     LIMIT 5;

10. Details of all cancelled orders?
Ans. SELECT Orders.OrderID, Customers.FirstName, Customers.LastName, Restaurants.Name AS RestaurantName, Orders.OrderAmount FROM Orders
     JOIN Customers ON Orders.CustomerID = Customers.CustomerID
     JOIN Restaurants ON Orders.RestaurantID = Restaurants.RestaurantID
     WHERE Orders.OrderStatus = 'Cancelled';

